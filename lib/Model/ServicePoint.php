<?php
/**
 * ServicePoint
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  MyDHL\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * DHL Express APIs (MyDHL API)
 *
 * Welcome to the official DHL Express APIs (MyDHL API) below are the published API Documentation to fulfill your shipping needs with DHL Express.       Please follow the process described [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--get-access) to request access to the DHL Express - MyDHL API services   In case you already have DHL Express - MyDHL API Service credentials please ensure to use the endpoints/environments listed  [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--environments)
 *
 * The version of the OpenAPI document: 2.11.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.2.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace MyDHL\Client\Model;

use \ArrayAccess;
use \MyDHL\Client\ObjectSerializer;

/**
 * ServicePoint Class Doc Comment
 *
 * @category Class
 * @description Array of the found Service Points. Each Service Point entity contains details about the service point.
 * @package  MyDHL\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class ServicePoint implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ServicePoint';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'int',
        'facility_id' => 'string',
        'facility_type_code' => 'string',
        'service_area_code' => 'string',
        'service_point_name' => 'string',
        'service_point_name_formatted' => 'string',
        'local_name' => 'string',
        'service_point_type' => 'string',
        'address' => '\MyDHL\Client\Model\Address',
        'geo_location' => '\MyDHL\Client\Model\GeoLocation',
        'distance' => 'string',
        'shipping_cut_off_time' => 'string',
        'opening_hours' => '\MyDHL\Client\Model\OpeningHours',
        'service_point_capabilities' => '\MyDHL\Client\Model\ServicePointCapabilities',
        'contact_details' => '\MyDHL\Client\Model\ContactDetails',
        'shipping_cut_off_time_html' => 'string',
        'distance_value' => 'string',
        'distance_metric' => 'float',
        'language' => '\MyDHL\Client\Model\Language',
        'shipment_limitations' => '\MyDHL\Client\Model\ShipmentLimitations',
        'shipment_limitations_by_piece' => '\MyDHL\Client\Model\ShipmentLimitationsByPiece',
        'charge_code' => 'string',
        'partner' => '\MyDHL\Client\Model\Partner',
        'promotion' => '\MyDHL\Client\Model\Promotion',
        'capacity_status' => '\MyDHL\Client\Model\CapacityStatus',
        'svp_status' => 'string',
        'work_week_start' => 'int',
        'located_at' => 'string',
        'time_zone' => '\MyDHL\Client\Model\DateTimeZone'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => 'int32',
        'facility_id' => null,
        'facility_type_code' => null,
        'service_area_code' => null,
        'service_point_name' => null,
        'service_point_name_formatted' => null,
        'local_name' => null,
        'service_point_type' => null,
        'address' => null,
        'geo_location' => null,
        'distance' => null,
        'shipping_cut_off_time' => null,
        'opening_hours' => null,
        'service_point_capabilities' => null,
        'contact_details' => null,
        'shipping_cut_off_time_html' => null,
        'distance_value' => null,
        'distance_metric' => 'double',
        'language' => null,
        'shipment_limitations' => null,
        'shipment_limitations_by_piece' => null,
        'charge_code' => null,
        'partner' => null,
        'promotion' => null,
        'capacity_status' => null,
        'svp_status' => null,
        'work_week_start' => 'int32',
        'located_at' => null,
        'time_zone' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'id' => false,
        'facility_id' => false,
        'facility_type_code' => false,
        'service_area_code' => false,
        'service_point_name' => false,
        'service_point_name_formatted' => false,
        'local_name' => false,
        'service_point_type' => false,
        'address' => false,
        'geo_location' => false,
        'distance' => false,
        'shipping_cut_off_time' => false,
        'opening_hours' => false,
        'service_point_capabilities' => false,
        'contact_details' => false,
        'shipping_cut_off_time_html' => false,
        'distance_value' => false,
        'distance_metric' => false,
        'language' => false,
        'shipment_limitations' => false,
        'shipment_limitations_by_piece' => false,
        'charge_code' => false,
        'partner' => false,
        'promotion' => false,
        'capacity_status' => false,
        'svp_status' => false,
        'work_week_start' => false,
        'located_at' => false,
        'time_zone' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'facility_id' => 'facilityId',
        'facility_type_code' => 'facilityTypeCode',
        'service_area_code' => 'serviceAreaCode',
        'service_point_name' => 'servicePointName',
        'service_point_name_formatted' => 'servicePointNameFormatted',
        'local_name' => 'localName',
        'service_point_type' => 'servicePointType',
        'address' => 'address',
        'geo_location' => 'geoLocation',
        'distance' => 'distance',
        'shipping_cut_off_time' => 'shippingCutOffTime',
        'opening_hours' => 'openingHours',
        'service_point_capabilities' => 'servicePointCapabilities',
        'contact_details' => 'contactDetails',
        'shipping_cut_off_time_html' => 'shippingCutOffTimeHtml',
        'distance_value' => 'distanceValue',
        'distance_metric' => 'distanceMetric',
        'language' => 'language',
        'shipment_limitations' => 'shipmentLimitations',
        'shipment_limitations_by_piece' => 'shipmentLimitationsByPiece',
        'charge_code' => 'chargeCode',
        'partner' => 'partner',
        'promotion' => 'promotion',
        'capacity_status' => 'capacityStatus',
        'svp_status' => 'svpStatus',
        'work_week_start' => 'workWeekStart',
        'located_at' => 'locatedAt',
        'time_zone' => 'timeZone'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'facility_id' => 'setFacilityId',
        'facility_type_code' => 'setFacilityTypeCode',
        'service_area_code' => 'setServiceAreaCode',
        'service_point_name' => 'setServicePointName',
        'service_point_name_formatted' => 'setServicePointNameFormatted',
        'local_name' => 'setLocalName',
        'service_point_type' => 'setServicePointType',
        'address' => 'setAddress',
        'geo_location' => 'setGeoLocation',
        'distance' => 'setDistance',
        'shipping_cut_off_time' => 'setShippingCutOffTime',
        'opening_hours' => 'setOpeningHours',
        'service_point_capabilities' => 'setServicePointCapabilities',
        'contact_details' => 'setContactDetails',
        'shipping_cut_off_time_html' => 'setShippingCutOffTimeHtml',
        'distance_value' => 'setDistanceValue',
        'distance_metric' => 'setDistanceMetric',
        'language' => 'setLanguage',
        'shipment_limitations' => 'setShipmentLimitations',
        'shipment_limitations_by_piece' => 'setShipmentLimitationsByPiece',
        'charge_code' => 'setChargeCode',
        'partner' => 'setPartner',
        'promotion' => 'setPromotion',
        'capacity_status' => 'setCapacityStatus',
        'svp_status' => 'setSvpStatus',
        'work_week_start' => 'setWorkWeekStart',
        'located_at' => 'setLocatedAt',
        'time_zone' => 'setTimeZone'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'facility_id' => 'getFacilityId',
        'facility_type_code' => 'getFacilityTypeCode',
        'service_area_code' => 'getServiceAreaCode',
        'service_point_name' => 'getServicePointName',
        'service_point_name_formatted' => 'getServicePointNameFormatted',
        'local_name' => 'getLocalName',
        'service_point_type' => 'getServicePointType',
        'address' => 'getAddress',
        'geo_location' => 'getGeoLocation',
        'distance' => 'getDistance',
        'shipping_cut_off_time' => 'getShippingCutOffTime',
        'opening_hours' => 'getOpeningHours',
        'service_point_capabilities' => 'getServicePointCapabilities',
        'contact_details' => 'getContactDetails',
        'shipping_cut_off_time_html' => 'getShippingCutOffTimeHtml',
        'distance_value' => 'getDistanceValue',
        'distance_metric' => 'getDistanceMetric',
        'language' => 'getLanguage',
        'shipment_limitations' => 'getShipmentLimitations',
        'shipment_limitations_by_piece' => 'getShipmentLimitationsByPiece',
        'charge_code' => 'getChargeCode',
        'partner' => 'getPartner',
        'promotion' => 'getPromotion',
        'capacity_status' => 'getCapacityStatus',
        'svp_status' => 'getSvpStatus',
        'work_week_start' => 'getWorkWeekStart',
        'located_at' => 'getLocatedAt',
        'time_zone' => 'getTimeZone'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    public const SERVICE_POINT_TYPE_CITY = 'CITY';
    public const SERVICE_POINT_TYPE_STATION = 'STATION';
    public const SERVICE_POINT_TYPE_PARTNER = 'PARTNER';
    public const SERVICE_POINT_TYPE_TWENTYFOURSEVEN = 'TWENTYFOURSEVEN';

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getServicePointTypeAllowableValues()
    {
        return [
            self::SERVICE_POINT_TYPE_CITY,
            self::SERVICE_POINT_TYPE_STATION,
            self::SERVICE_POINT_TYPE_PARTNER,
            self::SERVICE_POINT_TYPE_TWENTYFOURSEVEN,
        ];
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('id', $data ?? [], null);
        $this->setIfExists('facility_id', $data ?? [], null);
        $this->setIfExists('facility_type_code', $data ?? [], null);
        $this->setIfExists('service_area_code', $data ?? [], null);
        $this->setIfExists('service_point_name', $data ?? [], null);
        $this->setIfExists('service_point_name_formatted', $data ?? [], null);
        $this->setIfExists('local_name', $data ?? [], null);
        $this->setIfExists('service_point_type', $data ?? [], null);
        $this->setIfExists('address', $data ?? [], null);
        $this->setIfExists('geo_location', $data ?? [], null);
        $this->setIfExists('distance', $data ?? [], null);
        $this->setIfExists('shipping_cut_off_time', $data ?? [], null);
        $this->setIfExists('opening_hours', $data ?? [], null);
        $this->setIfExists('service_point_capabilities', $data ?? [], null);
        $this->setIfExists('contact_details', $data ?? [], null);
        $this->setIfExists('shipping_cut_off_time_html', $data ?? [], null);
        $this->setIfExists('distance_value', $data ?? [], null);
        $this->setIfExists('distance_metric', $data ?? [], null);
        $this->setIfExists('language', $data ?? [], null);
        $this->setIfExists('shipment_limitations', $data ?? [], null);
        $this->setIfExists('shipment_limitations_by_piece', $data ?? [], null);
        $this->setIfExists('charge_code', $data ?? [], null);
        $this->setIfExists('partner', $data ?? [], null);
        $this->setIfExists('promotion', $data ?? [], null);
        $this->setIfExists('capacity_status', $data ?? [], null);
        $this->setIfExists('svp_status', $data ?? [], null);
        $this->setIfExists('work_week_start', $data ?? [], null);
        $this->setIfExists('located_at', $data ?? [], null);
        $this->setIfExists('time_zone', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getServicePointTypeAllowableValues();
        if (!is_null($this->container['service_point_type']) && !in_array($this->container['service_point_type'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'service_point_type', must be one of '%s'",
                $this->container['service_point_type'],
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int|null $id The facility ID from GREF database
     *
     * @return self
     */
    public function setId($id)
    {
        if (is_null($id)) {
            throw new \InvalidArgumentException('non-nullable id cannot be null');
        }
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets facility_id
     *
     * @return string|null
     */
    public function getFacilityId()
    {
        return $this->container['facility_id'];
    }

    /**
     * Sets facility_id
     *
     * @param string|null $facility_id Service Point ID is a unique key with 6 characters, consisting of Service Area for first 3 characters (e.g. BRU) and the last 3 characters is the Facility code (e.g. 001); Service point ID = BRU001.  If address is used id not possible to use.
     *
     * @return self
     */
    public function setFacilityId($facility_id)
    {
        if (is_null($facility_id)) {
            throw new \InvalidArgumentException('non-nullable facility_id cannot be null');
        }
        $this->container['facility_id'] = $facility_id;

        return $this;
    }

    /**
     * Gets facility_type_code
     *
     * @return string|null
     */
    public function getFacilityTypeCode()
    {
        return $this->container['facility_type_code'];
    }

    /**
     * Sets facility_type_code
     *
     * @param string|null $facility_type_code The facility type code from GREF database
     *
     * @return self
     */
    public function setFacilityTypeCode($facility_type_code)
    {
        if (is_null($facility_type_code)) {
            throw new \InvalidArgumentException('non-nullable facility_type_code cannot be null');
        }
        $this->container['facility_type_code'] = $facility_type_code;

        return $this;
    }

    /**
     * Gets service_area_code
     *
     * @return string|null
     */
    public function getServiceAreaCode()
    {
        return $this->container['service_area_code'];
    }

    /**
     * Sets service_area_code
     *
     * @param string|null $service_area_code The service point’s Service Area Code
     *
     * @return self
     */
    public function setServiceAreaCode($service_area_code)
    {
        if (is_null($service_area_code)) {
            throw new \InvalidArgumentException('non-nullable service_area_code cannot be null');
        }
        $this->container['service_area_code'] = $service_area_code;

        return $this;
    }

    /**
     * Gets service_point_name
     *
     * @return string|null
     */
    public function getServicePointName()
    {
        return $this->container['service_point_name'];
    }

    /**
     * Sets service_point_name
     *
     * @param string|null $service_point_name Name of the service point
     *
     * @return self
     */
    public function setServicePointName($service_point_name)
    {
        if (is_null($service_point_name)) {
            throw new \InvalidArgumentException('non-nullable service_point_name cannot be null');
        }
        $this->container['service_point_name'] = $service_point_name;

        return $this;
    }

    /**
     * Gets service_point_name_formatted
     *
     * @return string|null
     */
    public function getServicePointNameFormatted()
    {
        return $this->container['service_point_name_formatted'];
    }

    /**
     * Sets service_point_name_formatted
     *
     * @param string|null $service_point_name_formatted Formatted name of the service point
     *
     * @return self
     */
    public function setServicePointNameFormatted($service_point_name_formatted)
    {
        if (is_null($service_point_name_formatted)) {
            throw new \InvalidArgumentException('non-nullable service_point_name_formatted cannot be null');
        }
        $this->container['service_point_name_formatted'] = $service_point_name_formatted;

        return $this;
    }

    /**
     * Gets local_name
     *
     * @return string|null
     */
    public function getLocalName()
    {
        return $this->container['local_name'];
    }

    /**
     * Sets local_name
     *
     * @param string|null $local_name The local trading name of the Service Point
     *
     * @return self
     */
    public function setLocalName($local_name)
    {
        if (is_null($local_name)) {
            throw new \InvalidArgumentException('non-nullable local_name cannot be null');
        }
        $this->container['local_name'] = $local_name;

        return $this;
    }

    /**
     * Gets service_point_type
     *
     * @return string|null
     */
    public function getServicePointType()
    {
        return $this->container['service_point_type'];
    }

    /**
     * Sets service_point_type
     *
     * @param string|null $service_point_type The type of the Service Point. CITY, STATION, PARTNER or TWENTYFOURSEVEN.
     *
     * @return self
     */
    public function setServicePointType($service_point_type)
    {
        if (is_null($service_point_type)) {
            throw new \InvalidArgumentException('non-nullable service_point_type cannot be null');
        }
        $allowedValues = $this->getServicePointTypeAllowableValues();
        if (!in_array($service_point_type, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'service_point_type', must be one of '%s'",
                    $service_point_type,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['service_point_type'] = $service_point_type;

        return $this;
    }

    /**
     * Gets address
     *
     * @return \MyDHL\Client\Model\Address|null
     */
    public function getAddress()
    {
        return $this->container['address'];
    }

    /**
     * Sets address
     *
     * @param \MyDHL\Client\Model\Address|null $address address
     *
     * @return self
     */
    public function setAddress($address)
    {
        if (is_null($address)) {
            throw new \InvalidArgumentException('non-nullable address cannot be null');
        }
        $this->container['address'] = $address;

        return $this;
    }

    /**
     * Gets geo_location
     *
     * @return \MyDHL\Client\Model\GeoLocation|null
     */
    public function getGeoLocation()
    {
        return $this->container['geo_location'];
    }

    /**
     * Sets geo_location
     *
     * @param \MyDHL\Client\Model\GeoLocation|null $geo_location geo_location
     *
     * @return self
     */
    public function setGeoLocation($geo_location)
    {
        if (is_null($geo_location)) {
            throw new \InvalidArgumentException('non-nullable geo_location cannot be null');
        }
        $this->container['geo_location'] = $geo_location;

        return $this;
    }

    /**
     * Gets distance
     *
     * @return string|null
     */
    public function getDistance()
    {
        return $this->container['distance'];
    }

    /**
     * Sets distance
     *
     * @param string|null $distance The distance from the search address to this Service Point (beeline).
     *
     * @return self
     */
    public function setDistance($distance)
    {
        if (is_null($distance)) {
            throw new \InvalidArgumentException('non-nullable distance cannot be null');
        }
        $this->container['distance'] = $distance;

        return $this;
    }

    /**
     * Gets shipping_cut_off_time
     *
     * @return string|null
     */
    public function getShippingCutOffTime()
    {
        return $this->container['shipping_cut_off_time'];
    }

    /**
     * Sets shipping_cut_off_time
     *
     * @param string|null $shipping_cut_off_time Time until which a shipment can be handed in at the Service Point, and is still shipped on the same day
     *
     * @return self
     */
    public function setShippingCutOffTime($shipping_cut_off_time)
    {
        if (is_null($shipping_cut_off_time)) {
            throw new \InvalidArgumentException('non-nullable shipping_cut_off_time cannot be null');
        }
        $this->container['shipping_cut_off_time'] = $shipping_cut_off_time;

        return $this;
    }

    /**
     * Gets opening_hours
     *
     * @return \MyDHL\Client\Model\OpeningHours|null
     */
    public function getOpeningHours()
    {
        return $this->container['opening_hours'];
    }

    /**
     * Sets opening_hours
     *
     * @param \MyDHL\Client\Model\OpeningHours|null $opening_hours opening_hours
     *
     * @return self
     */
    public function setOpeningHours($opening_hours)
    {
        if (is_null($opening_hours)) {
            throw new \InvalidArgumentException('non-nullable opening_hours cannot be null');
        }
        $this->container['opening_hours'] = $opening_hours;

        return $this;
    }

    /**
     * Gets service_point_capabilities
     *
     * @return \MyDHL\Client\Model\ServicePointCapabilities|null
     */
    public function getServicePointCapabilities()
    {
        return $this->container['service_point_capabilities'];
    }

    /**
     * Sets service_point_capabilities
     *
     * @param \MyDHL\Client\Model\ServicePointCapabilities|null $service_point_capabilities service_point_capabilities
     *
     * @return self
     */
    public function setServicePointCapabilities($service_point_capabilities)
    {
        if (is_null($service_point_capabilities)) {
            throw new \InvalidArgumentException('non-nullable service_point_capabilities cannot be null');
        }
        $this->container['service_point_capabilities'] = $service_point_capabilities;

        return $this;
    }

    /**
     * Gets contact_details
     *
     * @return \MyDHL\Client\Model\ContactDetails|null
     */
    public function getContactDetails()
    {
        return $this->container['contact_details'];
    }

    /**
     * Sets contact_details
     *
     * @param \MyDHL\Client\Model\ContactDetails|null $contact_details contact_details
     *
     * @return self
     */
    public function setContactDetails($contact_details)
    {
        if (is_null($contact_details)) {
            throw new \InvalidArgumentException('non-nullable contact_details cannot be null');
        }
        $this->container['contact_details'] = $contact_details;

        return $this;
    }

    /**
     * Gets shipping_cut_off_time_html
     *
     * @return string|null
     */
    public function getShippingCutOffTimeHtml()
    {
        return $this->container['shipping_cut_off_time_html'];
    }

    /**
     * Sets shipping_cut_off_time_html
     *
     * @param string|null $shipping_cut_off_time_html Obsolete. This is planned to be removed in future releases.
     *
     * @return self
     */
    public function setShippingCutOffTimeHtml($shipping_cut_off_time_html)
    {
        if (is_null($shipping_cut_off_time_html)) {
            throw new \InvalidArgumentException('non-nullable shipping_cut_off_time_html cannot be null');
        }
        $this->container['shipping_cut_off_time_html'] = $shipping_cut_off_time_html;

        return $this;
    }

    /**
     * Gets distance_value
     *
     * @return string|null
     */
    public function getDistanceValue()
    {
        return $this->container['distance_value'];
    }

    /**
     * Sets distance_value
     *
     * @param string|null $distance_value Distance of SVP from searched location
     *
     * @return self
     */
    public function setDistanceValue($distance_value)
    {
        if (is_null($distance_value)) {
            throw new \InvalidArgumentException('non-nullable distance_value cannot be null');
        }
        $this->container['distance_value'] = $distance_value;

        return $this;
    }

    /**
     * Gets distance_metric
     *
     * @return float|null
     */
    public function getDistanceMetric()
    {
        return $this->container['distance_metric'];
    }

    /**
     * Sets distance_metric
     *
     * @param float|null $distance_metric Metric of distance
     *
     * @return self
     */
    public function setDistanceMetric($distance_metric)
    {
        if (is_null($distance_metric)) {
            throw new \InvalidArgumentException('non-nullable distance_metric cannot be null');
        }
        $this->container['distance_metric'] = $distance_metric;

        return $this;
    }

    /**
     * Gets language
     *
     * @return \MyDHL\Client\Model\Language|null
     */
    public function getLanguage()
    {
        return $this->container['language'];
    }

    /**
     * Sets language
     *
     * @param \MyDHL\Client\Model\Language|null $language language
     *
     * @return self
     */
    public function setLanguage($language)
    {
        if (is_null($language)) {
            throw new \InvalidArgumentException('non-nullable language cannot be null');
        }
        $this->container['language'] = $language;

        return $this;
    }

    /**
     * Gets shipment_limitations
     *
     * @return \MyDHL\Client\Model\ShipmentLimitations|null
     */
    public function getShipmentLimitations()
    {
        return $this->container['shipment_limitations'];
    }

    /**
     * Sets shipment_limitations
     *
     * @param \MyDHL\Client\Model\ShipmentLimitations|null $shipment_limitations shipment_limitations
     *
     * @return self
     */
    public function setShipmentLimitations($shipment_limitations)
    {
        if (is_null($shipment_limitations)) {
            throw new \InvalidArgumentException('non-nullable shipment_limitations cannot be null');
        }
        $this->container['shipment_limitations'] = $shipment_limitations;

        return $this;
    }

    /**
     * Gets shipment_limitations_by_piece
     *
     * @return \MyDHL\Client\Model\ShipmentLimitationsByPiece|null
     */
    public function getShipmentLimitationsByPiece()
    {
        return $this->container['shipment_limitations_by_piece'];
    }

    /**
     * Sets shipment_limitations_by_piece
     *
     * @param \MyDHL\Client\Model\ShipmentLimitationsByPiece|null $shipment_limitations_by_piece shipment_limitations_by_piece
     *
     * @return self
     */
    public function setShipmentLimitationsByPiece($shipment_limitations_by_piece)
    {
        if (is_null($shipment_limitations_by_piece)) {
            throw new \InvalidArgumentException('non-nullable shipment_limitations_by_piece cannot be null');
        }
        $this->container['shipment_limitations_by_piece'] = $shipment_limitations_by_piece;

        return $this;
    }

    /**
     * Gets charge_code
     *
     * @return string|null
     */
    public function getChargeCode()
    {
        return $this->container['charge_code'];
    }

    /**
     * Sets charge_code
     *
     * @param string|null $charge_code Charge code, e.g. XX
     *
     * @return self
     */
    public function setChargeCode($charge_code)
    {
        if (is_null($charge_code)) {
            throw new \InvalidArgumentException('non-nullable charge_code cannot be null');
        }
        $this->container['charge_code'] = $charge_code;

        return $this;
    }

    /**
     * Gets partner
     *
     * @return \MyDHL\Client\Model\Partner|null
     */
    public function getPartner()
    {
        return $this->container['partner'];
    }

    /**
     * Sets partner
     *
     * @param \MyDHL\Client\Model\Partner|null $partner partner
     *
     * @return self
     */
    public function setPartner($partner)
    {
        if (is_null($partner)) {
            throw new \InvalidArgumentException('non-nullable partner cannot be null');
        }
        $this->container['partner'] = $partner;

        return $this;
    }

    /**
     * Gets promotion
     *
     * @return \MyDHL\Client\Model\Promotion|null
     */
    public function getPromotion()
    {
        return $this->container['promotion'];
    }

    /**
     * Sets promotion
     *
     * @param \MyDHL\Client\Model\Promotion|null $promotion promotion
     *
     * @return self
     */
    public function setPromotion($promotion)
    {
        if (is_null($promotion)) {
            throw new \InvalidArgumentException('non-nullable promotion cannot be null');
        }
        $this->container['promotion'] = $promotion;

        return $this;
    }

    /**
     * Gets capacity_status
     *
     * @return \MyDHL\Client\Model\CapacityStatus|null
     */
    public function getCapacityStatus()
    {
        return $this->container['capacity_status'];
    }

    /**
     * Sets capacity_status
     *
     * @param \MyDHL\Client\Model\CapacityStatus|null $capacity_status capacity_status
     *
     * @return self
     */
    public function setCapacityStatus($capacity_status)
    {
        if (is_null($capacity_status)) {
            throw new \InvalidArgumentException('non-nullable capacity_status cannot be null');
        }
        $this->container['capacity_status'] = $capacity_status;

        return $this;
    }

    /**
     * Gets svp_status
     *
     * @return string|null
     */
    public function getSvpStatus()
    {
        return $this->container['svp_status'];
    }

    /**
     * Sets svp_status
     *
     * @param string|null $svp_status Status of the service point(Active or Inactive)
     *
     * @return self
     */
    public function setSvpStatus($svp_status)
    {
        if (is_null($svp_status)) {
            throw new \InvalidArgumentException('non-nullable svp_status cannot be null');
        }
        $this->container['svp_status'] = $svp_status;

        return $this;
    }

    /**
     * Gets work_week_start
     *
     * @return int|null
     */
    public function getWorkWeekStart()
    {
        return $this->container['work_week_start'];
    }

    /**
     * Sets work_week_start
     *
     * @param int|null $work_week_start Number of day when the work week starts. It starts from 0 to 6(Sunday to Saturday)
     *
     * @return self
     */
    public function setWorkWeekStart($work_week_start)
    {
        if (is_null($work_week_start)) {
            throw new \InvalidArgumentException('non-nullable work_week_start cannot be null');
        }
        $this->container['work_week_start'] = $work_week_start;

        return $this;
    }

    /**
     * Gets located_at
     *
     * @return string|null
     */
    public function getLocatedAt()
    {
        return $this->container['located_at'];
    }

    /**
     * Sets located_at
     *
     * @param string|null $located_at located_at
     *
     * @return self
     */
    public function setLocatedAt($located_at)
    {
        if (is_null($located_at)) {
            throw new \InvalidArgumentException('non-nullable located_at cannot be null');
        }
        $this->container['located_at'] = $located_at;

        return $this;
    }

    /**
     * Gets time_zone
     *
     * @return \MyDHL\Client\Model\DateTimeZone|null
     */
    public function getTimeZone()
    {
        return $this->container['time_zone'];
    }

    /**
     * Sets time_zone
     *
     * @param \MyDHL\Client\Model\DateTimeZone|null $time_zone time_zone
     *
     * @return self
     */
    public function setTimeZone($time_zone)
    {
        if (is_null($time_zone)) {
            throw new \InvalidArgumentException('non-nullable time_zone cannot be null');
        }
        $this->container['time_zone'] = $time_zone;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


